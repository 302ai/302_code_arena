{
  "auth": {
    "description": "The creator has enabled verification, please fill in the sharing code below",
    "form": {
      "confirm_button": "Confirm",
      "confirm_button_loading": "Verifying",
      "input_code": "Please enter the sharing code",
      "remember_code": "Remember sharing code"
    },
    "title": "Need to share code"
  },
  "global": {
    "error": {
      "code_invalid": "Invalid sharing code. For more information, visit 302.AI",
      "copy_failed": "Copy failed",
      "network_error": "Network service error, please check the network status or try again later!",
      "not_found": "Page does not exist",
      "tool_deleted": "This tool has been deleted, please visit <site>302.AI</site> for more information",
      "tool_disabled": "This tool has been disabled, please visit <site>302.AI</site> for more information",
      "unknown_error": "An unknown error occurred, please contact customer service"
    },
    "footer": {
      "copyright_content": "Powered by <logo></logo>",
      "copyright_leading": "Content is generated by AI and is for reference only"
    },
    "header": {
      "github_hyperlink": {
        "label": "GitHub repository link"
      },
      "language_switcher": {
        "switch_language": "Switch language"
      },
      "theme_switcher": {
        "dark": "Dark",
        "light": "Light",
        "system": "System",
        "toggle_theme": "switch theme"
      },
      "tool_info": {
        "description": "Current tool related information",
        "title": "About",
        "trigger": {
          "label": "Open/Close Tool Information Popup"
        }
      }
    }
  },
  "home": {
    "header": {
      "title": "Code Arena"
    },
    "tabs": {
      "leaderboard": "Leaderboard",
      "modelPk": "Model PK"
    }
  },
  "leaderBoard": {
    "appearances": "Number of appearances",
    "creator": "Creator",
    "empty": "No leaderboard data yet",
    "name": "name",
    "rank": "Ranking",
    "score": "Score",
    "winRate": "Win rate"
  },
  "modelPk": {
    "description": "AI models compete in real time to see who has better code capabilities.",
    "model_select": {
      "noResultsFound": "Model not found",
      "random": "Random",
      "searchModels": "Search models...",
      "selectModel": "Select Model"
    },
    "pk_form": {
      "error": {
        "generate_failed": "Code generation failed, please try again",
        "no_model": "Missing LLM model",
        "no_prompt": "Missing prompt words",
        "no_type": "Missing generated code type"
      },
      "generate": "Code Battle",
      "generating": "Generating...",
      "input_placeholder": "Please enter a prompt",
      "quick_start": {
        "binary_tree": "Implement a binary tree, including insertion, deletion, and search operations",
        "calculator": "Calculator",
        "e-commerce_page": "E-commerce platform homepage",
        "exchange_rate_calculator": "Exchange rate converter",
        "longest_common_substring": "Write a function to find the longest common substring between two strings",
        "personal_finance_dashboard": "Personal finance dashboard",
        "quick_sort": "Implement a quick sorting algorithm",
        "shortest_path_algorithm": "Implement a shortest path finding algorithm"
      }
    },
    "pk_result": {
      "left_label": "Model A:",
      "left_placeholder": "Model A",
      "right_placeholder": "Model B"
    },
    "result": {
      "code": "Code",
      "failed": "The model failed to generate",
      "lock_code": "Read only",
      "model": "ModelA:",
      "preview": "Preview",
      "run_code_result": "Result",
      "unlock_code": "Allow editing"
    },
    "title": "Which LLM code is better?",
    "vote": {
      "error": {
        "update_leaderboard_failed": "Failed to update leaderboard"
      },
      "model_left": "Model A:",
      "model_right": "Model B:",
      "skip": "Skip",
      "vote_description": "Which one does the best?",
      "vote_left": "Model A is better",
      "vote_right": "Model B is better"
    }
  },
  "pk_history": {
    "loading": "Loading...",
    "modelA": "Model A:",
    "modelB": "Model B:",
    "no_records": "No records yet",
    "pagination": {
      "more_pages": "More pages",
      "next": "Next",
      "previous": "Previous"
    },
    "prompt": "Prompt:",
    "title": "History",
    "tooltip": "History",
    "type": "PK scenario:"
  }
}
